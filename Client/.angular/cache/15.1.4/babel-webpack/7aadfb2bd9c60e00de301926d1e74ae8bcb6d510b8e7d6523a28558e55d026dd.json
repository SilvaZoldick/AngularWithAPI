{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nlet MovieComponent = class MovieComponent {\n  constructor(service, route, router) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    this.pageName = \"\";\n    this.id = 0;\n    this.movieForm = new FormGroup({\n      title: new FormControl(null),\n      gender: new FormControl(null),\n      duration: new FormControl(null)\n    });\n    this.isDisabled = false;\n  }\n  ngOnInit() {\n    this.isDisabled = this.pageName == \"Details\";\n    this.FillMovieForm();\n  }\n  FillMovieForm() {\n    const paramId = this.route.snapshot.paramMap.get(\"id\");\n    if (paramId != null) {\n      this.id = parseInt(paramId);\n      this.service.getMovieById(this.id).subscribe(result => {\n        this.GenerateFormControl(result);\n      });\n    } else {\n      this.GenerateFormControl(null);\n    }\n  }\n  GenerateFormControl(result) {\n    if (this.pageName != \"Create\") {\n      this.movieForm = new FormGroup({\n        title: new FormControl({\n          value: result?.title,\n          disabled: this.isDisabled\n        }),\n        gender: new FormControl({\n          value: result?.gender,\n          disabled: this.isDisabled\n        }),\n        duration: new FormControl({\n          value: result?.duration,\n          disabled: this.isDisabled\n        })\n      });\n    }\n  }\n  OnCreateMovie() {\n    const movie = this.movieForm.value;\n    this.service.postMovies(movie).subscribe(result => {\n      alert(\"Movie registered!\");\n      this.router.navigate([`/movies/${result.id}`]);\n    });\n  }\n  OnEditMovie() {\n    this.router.navigate([`/movies/edit/${this.id}`], {\n      relativeTo: this.route\n    });\n  }\n  OnSaveMovie() {\n    this.service.putMovie(this.movieForm).subscribe(result => {\n      alert(\"Movie edited\");\n      this.router.navigate([`/movies/${result.id}`]);\n    });\n  }\n  OnCancel() {\n    this.router.navigate(['/movies']);\n  }\n};\n__decorate([Input()], MovieComponent.prototype, \"pageName\", void 0);\nMovieComponent = __decorate([Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})], MovieComponent);\nexport { MovieComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","FormGroup","FormControl","MovieComponent","constructor","service","route","router","title","gender","duration","ngOnInit","isDisabled","pageName","FillMovieForm","paramId","snapshot","paramMap","get","id","parseInt","getMovieById","subscribe","result","GenerateFormControl","movieForm","value","disabled","OnCreateMovie","movie","postMovies","alert","navigate","OnEditMovie","relativeTo","OnSaveMovie","putMovie","OnCancel","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\israel.GALLTECNOLOGIA\\Documents\\Coding\\NetApp\\Client\\src\\app\\movies\\movie\\movie.component.ts"],"sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\nimport { MovieService } from './../movie.service';\nimport { Component, Input } from '@angular/core';\nimport { IMovie } from '../movie';\nimport { FormGroup, FormControl, NgControlStatus } from '@angular/forms';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent {\n  @Input()\n  pageName: string = \"\";\n\n  id: number | null = 0;\n  movieForm: any = new FormGroup({\n    title: new FormControl(null),\n    gender: new FormControl(null),\n    duration: new FormControl(null)\n  });\n  isDisabled: boolean = false;\n\n  constructor(\n    private service: MovieService,\n    private route: ActivatedRoute,\n    private router: Router\n  ){}\n\n  ngOnInit(){\n    this.isDisabled = this.pageName == \"Details\";\n    this.FillMovieForm();\n  }\n  FillMovieForm(){\n    const paramId = this.route.snapshot.paramMap.get(\"id\");\n    if (paramId != null){\n      this.id = parseInt(paramId);\n      this.service.getMovieById(this.id).subscribe((result) => {\n        this.GenerateFormControl(result);\n      });\n    }\n    else{\n      this.GenerateFormControl(null);\n    }\n  }\n  GenerateFormControl(result: IMovie | null){\n    if (this.pageName != \"Create\") {\n      this.movieForm = new FormGroup({\n        title: new FormControl({value: result?.title, disabled: this.isDisabled}),\n        gender: new FormControl({value: result?.gender, disabled: this.isDisabled}),\n        duration: new FormControl({value: result?.duration, disabled: this.isDisabled}),\n      });\n    }\n  }\n\n  OnCreateMovie(): void{\n    const movie: IMovie = this.movieForm.value;\n    this.service.postMovies(movie).subscribe((result) => {\n      alert(\"Movie registered!\")\n      this.router.navigate([`/movies/${result.id}`]);\n    });\n  }\n  OnEditMovie(){\n    this.router.navigate([`/movies/edit/${this.id}`], { relativeTo: this.route })\n  }\n  OnSaveMovie(): void{\n    this.service.putMovie(this.movieForm).subscribe((result) => {\n      alert(\"Movie edited\")\n      this.router.navigate([`/movies/${result.id}`]);\n    });\n  }\n  OnCancel(): void {\n    this.router.navigate(['/movies'])\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}