{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiSource = 'http:localhost:5021/api/v1/auth';\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiSource}/login`, {\n      email,\n      password\n    }).pipe(tap({\n      next: p => this.setToken(p.token)\n    }));\n  }\n  isLoggedIn() {\n    return localStorage.getItem('token') != null;\n  }\n  logout() {\n    localStorage.removeItem('token');\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,GAAG,QAAQ,MAAM;;;AAQtC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,cAAS,GAAG,iCAAiC;EAEP;EAEtCC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAgB,GAAG,IAAI,CAACC,SAAS,QAAQ,EAAE;MAAEH,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAChFG,IAAI,CACHT,GAAG,CAAC;MACFU,IAAI,EAAEC,CAAC,IAAI,IAAI,CAACC,QAAQ,CAACD,CAAC,CAACE,KAAK;KACjC,CACF,CACF;EACH;EACAC,UAAU;IACR,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;EAC9C;EACAC,MAAM;IACJF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;EAClC;EACQN,QAAQ,CAACC,KAAa;IAC5BE,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;EACtC;;AAvBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["tap","AuthService","constructor","http","login","email","password","post","apiSource","pipe","next","p","setToken","token","isLoggedIn","localStorage","getItem","logout","removeItem","setItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\israel.GALLTECNOLOGIA\\Documents\\Coding\\NetApp\\Client\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Observable, tap } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginResponse } from '../models/LoginResponse';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  apiSource = 'http:localhost:5021/api/v1/auth';\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  login(email: string, password: string): Observable<LoginResponse>{\r\n    return this.http.post<LoginResponse>(`${this.apiSource}/login`, { email, password})\r\n      .pipe(\r\n        tap({\r\n          next: p => this.setToken(p.token)\r\n        }\r\n      )\r\n    );\r\n  }\r\n  isLoggedIn(){\r\n    return localStorage.getItem('token') != null;\r\n  }\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n  }\r\n  private setToken(token: string){\r\n    localStorage.setItem('token', token);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}