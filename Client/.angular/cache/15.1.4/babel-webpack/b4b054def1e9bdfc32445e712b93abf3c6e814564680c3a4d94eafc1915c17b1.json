{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.apiSource = 'http://localhost:5021/v1/movies';\n  }\n  getMovies() {\n    return this.http.get(this.apiSource);\n  }\n  postMovies(movie) {\n    return this.http.post(this.apiSource, movie);\n  }\n  deleteMovies(id) {\n    const url = `${this.apiSource}/${id}`;\n    return this.http.delete(url);\n  }\n  getMovieById(id) {\n    const url = `${this.apiSource}/${id}`;\n    return this.http.get(url, {\n      headers: string = \"Access-Control-Allow-Origin: *\"\n    });\n  }\n}\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,cAAS,GAAG,iCAAiC;EAG9D;EACAC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,SAAS,CAAC;EAC/C;EACAC,UAAU,CAACC,KAAY;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAQ,IAAI,CAACH,SAAS,EAAEE,KAAK,CAAC;EACrD;EACAE,YAAY,CAACC,EAAU;IACrB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACN,SAAS,IAAIK,EAAE,EAAE;IACrC,OAAO,IAAI,CAACR,IAAI,CAACU,MAAM,CAAQD,GAAG,CAAC;EACrC;EACAE,YAAY,CAACH,EAAU;IACrB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACN,SAAS,IAAIK,EAAE,EAAE;IACrC,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAQO,GAAG,EAAE;MAACG,OAAO,EAAEC,MAAM,GAAG;IAAgC,CAAC,CAAC;EACxF;;AAlBWf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAgB,SAAZhB,YAAY;EAAAiB,YAFX;AAAM","names":["MovieService","constructor","http","getMovies","get","apiSource","postMovies","movie","post","deleteMovies","id","url","delete","getMovieById","headers","string","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\israel.GALLTECNOLOGIA\\Documents\\Coding\\NetApp\\Client\\src\\app\\movies\\movie.service.ts"],"sourcesContent":["import { Movie } from './movie';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private readonly apiSource = 'http://localhost:5021/v1/movies';\n\n  constructor(private http: HttpClient) {\n  }\n  getMovies(): Observable<Movie[]>{\n    return this.http.get<Movie[]>(this.apiSource);\n  }\n  postMovies(movie: Movie): Observable<Movie>{\n    return this.http.post<Movie>(this.apiSource, movie);\n  }\n  deleteMovies(id: number): Observable<Movie>{\n    const url = `${this.apiSource}/${id}`\n    return this.http.delete<Movie>(url);\n  }\n  getMovieById(id: number): Observable<Movie>{\n    const url = `${this.apiSource}/${id}`\n    return this.http.get<Movie>(url, {headers: string = \"Access-Control-Allow-Origin: *\"});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}